# yaml锚点(不懂自行Google)勿动
proxy-provider-http: &http
  type: http
  interval: 3600
  health-check:
    enable: false
    url: https://1.1.1.1/generate_204
    interval: 7200

proxy-provider-file: &file
  type: file
  health-check:
    enable: false
    url: https://1.1.1.1/generate_204
    interval: 7200

# Clash配置
mixed-port: 7890
allow-lan: false
mode: rule
log-level: info
ipv6: false

external-controller: 127.0.0.1:9090
# 控制面板相对路径
# external-ui: folder

dns:
  enable: true
  ipv6: false
  listen: 0.0.0.0:1053
  default-nameserver:
   - 223.5.5.5
   - 119.29.29.29
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  nameserver: 
    - 'https://doh.pub/dns-query'
    - 'https://223.5.5.5/dns-query'
  fallback:
    - 'https://doh.dns.sb/dns-query'
    - 'https://1.1.1.1/dns-query'
    - 'tls://8.8.4.4:853'
  fallback-filter:
    geoip: true
    geoip-code: CN
    
# 如果有节点可按文档填写，并在group内使用    
    proxy-groups:
  - name: 𝐏𝐫𝐨𝐱𝐲
    type: select
    use:
      - Sub1
    # - Sub2
    # - Sub3
    # filter使用正则表达式去筛选节点
    # filter: "🇭🇰|HK|Hong|香港|港"

#Telegram策略组
  - name: 𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦
    type: select
    proxies:
      - 𝐏𝐫𝐨𝐱𝐲
      - 𝐇𝐊
      - 𝐓𝐖
      - 𝐒𝐆
      - 𝐉𝐏
      - 𝐔𝐒
      - 𝐎𝐭𝐡𝐞𝐫
#Twitter策略组
  - name: 𝐓𝐰𝐢𝐭𝐭𝐞𝐫
    type: select
    proxies:
      - 𝐏𝐫𝐨𝐱𝐲
      - 𝐇𝐊
      - 𝐓𝐖
      - 𝐒𝐆
      - 𝐉𝐏
      - 𝐔𝐒
      - 𝐎𝐭𝐡𝐞𝐫
#Facebook策略组
  - name: 𝐅𝐚𝐜𝐞𝐛𝐨𝐨𝐤
    type: select
    proxies:
      - 𝐏𝐫𝐨𝐱𝐲
      - 𝐇𝐊
      - 𝐓𝐖
      - 𝐒𝐆
      - 𝐉𝐏
      - 𝐔𝐒
      - 𝐎𝐭𝐡𝐞𝐫
#Netflix策略组
  - name: 𝐍𝐞𝐭𝐟𝐥𝐢𝐱
    type: select
    proxies:      
      - 𝐏𝐫𝐨𝐱𝐲
      - 𝐇𝐊
      - 𝐓𝐖
      - 𝐒𝐆
      - 𝐉𝐏
      - 𝐔𝐒
      - 𝐎𝐭𝐡𝐞𝐫
#Disney策略组
  - name: 𝐃𝐢𝐬𝐧𝐞𝐲+
    type: select
    proxies:
      - 𝐏𝐫𝐨𝐱𝐲
      - 𝐇𝐊
      - 𝐓𝐖
      - 𝐒𝐆
      - 𝐉𝐏
      - 𝐔𝐒
      - 𝐎𝐭𝐡𝐞𝐫
#Bilibili策略组
  - name: 𝐁𝐢𝐥𝐢𝐛𝐢𝐥𝐢
    type: select
    proxies:
      - 𝐏𝐫𝐨𝐱𝐲
      - 𝐇𝐊
      - 𝐓𝐖
      - 𝐌𝐎
      - 𝐒𝐆
      - 𝐉𝐏
      - 𝐔𝐒
      - 𝐎𝐭𝐡𝐞𝐫    
#Tiktok策略组
  - name: 𝐓𝐢𝐤𝐓𝐨𝐤
    type: select
    proxies:
      - 𝐏𝐫𝐨𝐱𝐲
      - 𝐇𝐊
      - 𝐓𝐖
      - 𝐒𝐆
      - 𝐉𝐏
      - 𝐔𝐒
      - 𝐎𝐭𝐡𝐞𝐫   
#Chatgpt策略组
  - name: 𝐎𝐩𝐞𝐧𝐀𝐈
    type: select
    proxies:
      - 𝐏𝐫𝐨𝐱𝐲
      - 𝐇𝐊
      - 𝐓𝐖
      - 𝐒𝐆
      - 𝐉𝐏
      - 𝐔𝐒
      - 𝐎𝐭𝐡𝐞𝐫
#国外网站策略组
  - name: 国外网站
    type: select
    proxies:
      - 𝐏𝐫𝐨𝐱𝐲
      - 𝐇𝐊
      - 𝐓𝐖
      - 𝐒𝐆
      - 𝐉𝐏
      - 𝐔𝐒
      - 𝐎𝐭𝐡𝐞𝐫
     
  - name: 𝐇𝐊
    type: url-test
    use:
      - Sub1
      # - Sub2
      # - Sub3
    # filter使用正则表达式去筛选节点
    filter: "🇭🇰|HK|Hong|香港|港"

  - name: 𝐓𝐖
    type: url-test
    use:
      - Sub1
      # - Sub2
      # - Sub3
    # filter使用正则表达式去筛选节点
    filter: "🇹🇼|tw|TW|台湾|台|Taiwan"  

    - name: 𝐌𝐎
    type: url-test
    use:
      - Sub1
      # - Sub2
      # - Sub3
    # filter使用正则表达式去筛选节点
    filter: "🇲🇴|MO|澳门|澳門|Macao"

  - name: 𝐒𝐆
    type: url-test
    use:
      - Sub1
      # - Sub2
      # - Sub3
    filter: "🇸🇬|SG|Singapore|狮城|新加坡" 

  - name: 𝐉𝐏
    type: url-test
    use:
      - Sub1
      # - Sub2
      # - Sub3
    filter: "🇯🇵|JP|japan|日本"

  - name: 𝐔𝐒
    type: url-test
    use:
      - Sub1
      # - Sub2
      # - Sub3
    filter: "🇺🇸|US|United|美|美国"

  - name: 𝐎𝐭𝐡𝐞𝐫
    type: select
    use:
      - Sub1
      # - Sub2
      # - Sub3
    # 筛选除日美新港外的节点，可自行按格式添加
    filter: "^(?!.*(?:Hong|HK|TW|Taiwan|USA|Japan|Singapore|USA|🇭🇰|🇯🇵|🇸🇬|🇹🇼|🇺🇸|香港|日本|狮城|新加坡|台湾|美国)).*"


# proxy-provider 可参考meta内核文档 https://clash-meta.wiki/config/proxy-providers
proxy-providers:
  # 在线订阅,有多个机场按格式书写在下面
  Sub1:
    <<: *http
    path: ./proxies/Sub1.yaml
    url: https://v1.dogapi.yachts/api/v1/client/subscribe?token=b73a13fe4c59f6a312480aa8b629543b

  # Sub3:
  #   <<: *file
  #   path: ./proxies/Sub2.yaml
  #   url: 订阅链接
  #
  # 本地节点，路径可填写绝对路径或者相对路径(为clash工作目录下)
  # Sub3:
  #   <<: *file
  #   path: ./proxies/Sub3.yaml
  #   url: 订阅链接
# 可参考meta核文档 https://clash-meta.wiki/config/rules/rule-provider
rule-providers:
  TikTok:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TikTok/TikTok.yaml"
    path: ./ruleset/TikTok.yaml
    interval: 86400

  Telegram:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml"
    path: ./ruleset/Telegram.yaml
    interval: 86400

  Twitter:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Twitter/Twitter.yaml"
    path: ./ruleset/Twitter.yaml
    interval: 86400

  Facebook:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Facebook/Facebook.yaml"
    path: ./ruleset/Facebook.yaml
    interval: 86400

  Netflix:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.yaml"
    path: ./ruleset/Netflix.yaml
    interval: 86400

  Disney:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney.yaml"
    path: ./ruleset/Disney.yaml
    interval: 86400

  BiliBili:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/BiliBili/BiliBili.yaml"
    path: ./ruleset/BiliBili.yaml
    interval: 86400    

  OpenAI:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.yaml"
    path: ./ruleset/OpenAI.yaml
    interval: 86400

  WeChat:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/WeChat/WeChat.yaml"
    path: ./ruleset/WeChat.yaml
    interval: 86400
    
  China:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/China/China.yaml"
    path: ./ruleset/China.yaml
    interval: 86400

  Global:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/proxy.txt"
    path: ./ruleset/proxy.yaml
    interval: 86400

  Lan:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml"
    path: ./ruleset/Lan.yaml
    interval: 86400

# 规则部分建议域名规则在前，ip规则在后
# ip规则尽量使用no-resolve，减少需要走代理的域名在本地解析的情况
rules:
  - RULE-SET,Telegram,𝐓𝐞𝐥𝐞𝐠𝐫𝐚𝐦
  - RULE-SET,Twitter,𝐓𝐰𝐢𝐭𝐭𝐞𝐫
  - RULE-SET,Facebook,𝐅𝐚𝐜𝐞𝐛𝐨𝐨𝐤
  - RULE-SET,Netflix,𝐍𝐞𝐭𝐟𝐥𝐢𝐱
  - RULE-SET,Disney,𝐃𝐢𝐬𝐧𝐞𝐲+
  - RULE-SET,BiliBili,𝐁𝐢𝐥𝐢𝐛𝐢𝐥𝐢
  - RULE-SET,TikTok,𝐓𝐢𝐤𝐓𝐨𝐤
  - RULE-SET,OpenAI,𝐎𝐩𝐞𝐧𝐀𝐈
  - RULE-SET,Global,国外网站
  - RULE-SET,WeChat,𝐃𝐈𝐑𝐄𝐂𝐓
  - RULE-SET,China,𝐃𝐈𝐑𝐄𝐂𝐓
  - RULE-SET,Lan,𝐃𝐈𝐑𝐄𝐂𝐓
